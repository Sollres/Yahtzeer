/*2 2 4 6 1

combi possible

total de 2

proche combi

brelan (2) à 1 dé
carré (2) à 2 dés
full (2) à 2 dés
yams (2) à 3 dés


Dé à relancer : 

2 2 4 6 1

Comment choisir les dés à relancer ?
*/
/*
attribuer aux dés un chiffre correspondant à sa place dans la main ?

pos1 = m1->de1 ?*/

/*
Incrémenter un indice si le dé est gardé ? 

tab[5] = {0,0,0,0,0}
si dé ne doit pas être relancé (détérminer en fonction des combinaison)
passage à 1
tab[5] = {0,0,1,1,0}

dans relance_ordi
si tab[0] == 1
	m1->de1 = rand()%6+1;
etc....
*/

/*

Pour determiner les combinaisons de l'ordi : 

Utilisation de tableau ?

le tableau prend la valeur de chaque dé

ex : main -> 2 4 6 1 3 
tableau : tab[5] = {2,4,6,1,3}

for(int i=0;i<6;i++){
	switch(tab[i]){
		case 1 : o_nb1++;break;
		case 2 : o_nb2++;break;
	}
}

exemple sortie : o_nb1 = 1; -------> Total de 1 possible etc...
si o_nb1 = 4; -------> Total de 1, Brelan, Carré

Pour valider les combinaison if ? switch ?

Chance ---> for(int i =0;i<6;i++)
				chance += tab[i];


if(o_nb1 == 3){
	Total1 = 3;
	Brelan1 = 3;
}

Points : Mettre au nombre de points directement exemple : brelan1=3 si trois 1 dans la main.
switch(o_nb1){
	case 1 : Total1 = 1;break;
	case 2 : Total1 = 2;break;
	case 3 : Total1 = 3;Brelan1 = 3;break;
	case 4 : Total1 = 4;Brelan1 = 3;Carre1 = 4;break;
	case 5 : Total1 = 5;Brelan1 = 3;Carre1 = 4;Yams = 50;break;
}

Switch pour chaque face du dé

Savoir si il faut relancer ou non ?

SI combinaison possible == Yams pas de relance
SI yams déja pris ou impossible et Gde_suite dipso pas de relance
SI yams, Gde_suite deja pris ou infaisable et petite_suite dispo pas de relance
SI yams, Gde_suite,pte_suite pris ou impossible et full dispo nepas relancer
SI yams, Gde_suite, pte_suite, full pris ou impossible et Carre dispo





void tour_ordi(){
	
}
